from typing import List, Optional, Tuple, Type, Union
import unittest

_Headers = List[Tuple[str, str]]
_InBody = Union[str, bytes]

class CPWebCase(unittest.TestCase):
    def getPage(self, url: str, headers: Optional[_Headers] = None, method: str = 'GET', body: Optional[_InBody] = None, protocol: Optional[str] = None, raise_subcls: Tuple[Type[Exception], ...] = ()) -> Tuple[str, _Headers, bytes]: ...
    def assertStatus(self, status: str, msg: Optional[str] = None) -> None: ...
    def assertHeader(self, key: str, value: Optional[str] = None, msg: Optional[str] = None) -> str: ...
    def assertBody(self, value: _InBody, msg: Optional[str] = None) -> None: ...
    def assertInBody(self, value: _InBody, msg: Optional[str] = None) -> None: ...
    def assertNotInBody(self, value: _InBody, msg: Optional[str] = None) -> None: ...
